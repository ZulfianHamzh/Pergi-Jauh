generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_account_user")

  @@unique([provider, providerAccountId], map: "unique_provider_account")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime @db.Timestamptz(6)
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_session_user")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @db.Timestamptz(6)
  image         String?
  password      String?
  role          String    @default("USER")
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime @db.Timestamptz(6)

  @@unique([identifier, token], map: "unique_identifier_token")
}

model Product {
  id            String       @id @default(cuid())
  name          String
  price         Float
  availability  Availability
  image         String?
  weight        String?
  condition     String?
  category      Category?
  productDetail String?
  createdAt     DateTime     @default(now()) @db.Timestamptz(6)
  updatedAt     DateTime     @default(now()) @updatedAt @db.Timestamptz(6)
}

model Event {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title           String
  image           String
  createdAt       DateTime @default(now()) @db.Timestamptz(6)
  detailEvent     String?  @db.VarChar
  linkPendaftaran String?
}

enum Availability {
  Tersedia
  Habis
}

enum Category {
  Coffee
  Non-Coffe
  Foods
  Snacks
  Paket
}
